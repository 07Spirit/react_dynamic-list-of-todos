{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/Loader/Loader.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","React","memo","todo","carierTodo","setCarierTodo","id","title","completed","className","classNames","type","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoInfo","selected","searchHolder","useState","initialTodos","setInitialTodos","todos","setTodos","useEffect","todosFromServer","error","console","searchElement","prevTodos","filter","includes","todosBefore","filterTodos","length","map","TodoFilter","setSelected","setSearchHolder","inputText","setInputText","onChange","event","currentTarget","value","placeholder","trimStart","style","pointerEvents","TodoModal","initialTodo","user","setUser","userId","getUser","userFromServer","href","email","name","App","isOpenTodoModal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb872e0f.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList = React.memo(\n  ({\n    todo,\n    carierTodo,\n    setCarierTodo,\n  }: {\n    todo: Todo,\n    carierTodo: Todo,\n    setCarierTodo: React.Dispatch<React.SetStateAction<Todo>>\n  }) => {\n    const { id, title, completed } = todo;\n\n    return (\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">{id}</td>\n        {completed ? (\n          <td className=\"is-vcentered\">\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </td>\n        ) : (\n          <td className=\"is-vcentered\" />\n        )}\n        <td className=\"is-vcentered is-expanded\">\n          <p\n            className={classNames(\n              { 'has-text-danger': !completed },\n              { 'has-text-success': completed },\n            )}\n          >\n            {title}\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button\n            data-cy=\"selectButton\"\n            className=\"button\"\n            type=\"button\"\n            onClick={() => {\n              setCarierTodo(todo);\n            }}\n          >\n            <span className=\"icon\">\n              <i className={\n                classNames('far', {\n                  'fa-eye': todo.id !== carierTodo.id,\n                }, { 'fa-eye-slash': todo.id === carierTodo.id })\n              }\n              />\n            </span>\n          </button>\n        </td>\n      </tr>\n    );\n  },\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { TodoList } from '../TodoList';\nimport { getTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\nexport const TodoInfo = React.memo(\n  ({\n    selected,\n    searchHolder,\n    carierTodo,\n    setCarierTodo,\n  }: {\n    selected: string\n    searchHolder: string\n    carierTodo: Todo\n    setCarierTodo: React.Dispatch<React.SetStateAction<Todo>>\n  }) => {\n    const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n    const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n    useEffect(() => {\n      try {\n        getTodos()\n          .then((todosFromServer) => {\n            setInitialTodos(todosFromServer);\n            setTodos(todosFromServer);\n          });\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error(error);\n      }\n    }, []);\n\n    const searchElement = () => {\n      if (searchHolder !== '') {\n        setTodos((prevTodos) => {\n          return prevTodos.filter((todo) => todo.title.includes(searchHolder));\n        });\n      }\n    };\n\n    const filterTodos = () => {\n      switch (selected) {\n        case 'active':\n          setTodos(initialTodos);\n          setTodos((todosBefore) => todosBefore\n            .filter((todo) => !todo.completed));\n          searchElement();\n          break;\n        case 'completed':\n          setTodos(initialTodos);\n          setTodos((todosBefore) => todosBefore\n            .filter((todo) => todo.completed));\n          searchElement();\n          break;\n\n        case 'All':\n        default:\n          setTodos(initialTodos);\n          searchElement();\n          break;\n      }\n    };\n\n    useEffect(() => {\n      filterTodos();\n    }, [selected, searchHolder]);\n\n    if (initialTodos.length >= 1) {\n      return (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todos.map((todo) => (\n              <TodoList\n                carierTodo={carierTodo}\n                todo={todo}\n                key={todo.id}\n                setCarierTodo={setCarierTodo}\n              />\n            ))}\n          </tbody>\n        </table>\n      );\n    }\n\n    return (\n      <Loader />\n    );\n  },\n);\n","import { useState } from 'react';\n\nexport const TodoFilter: React.FC<{\n  setSelected: React.Dispatch<React.SetStateAction<string>>;\n  setSearchHolder: React.Dispatch<React.SetStateAction<string>>;\n}> = ({ setSelected, setSearchHolder }) => {\n  const [inputText, setInputText] = useState('');\n\n  const handleSelected = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelected(event.currentTarget.value);\n  };\n\n  const handlePlace = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchHolder(event.currentTarget.value.trimStart());\n    setInputText(event.currentTarget.value.trimStart());\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelected}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          value={inputText}\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handlePlace}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {inputText !== '' && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setSearchHolder('');\n                setInputText('');\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\nexport const TodoModal: React.FC<{\n  initialTodo: Todo\n  setCarierTodo: React.Dispatch<React.SetStateAction<Todo>>\n  carierTodo: Todo\n}> = ({\n  initialTodo,\n  setCarierTodo,\n  carierTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  const {\n    title, userId, id, completed,\n  } = carierTodo;\n\n  useEffect(() => {\n    try {\n      getUser(userId)\n        .then((userFromServer) => {\n          setUser(userFromServer);\n        });\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }, [userId]);\n\n  const resetTodoModal = () => {\n    setCarierTodo(initialTodo);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!carierTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={resetTodoModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              {user && (\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoInfo } from './components/TodoInfo';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\n\nconst initialTodo: Todo = {\n  id: 0,\n  title: '',\n  completed: false,\n  userId: 0,\n};\n\nexport const App: React.FC = () => {\n  const [selected, setSelected] = useState('All');\n  const [searchHolder, setSearchHolder] = useState('');\n  const [carierTodo, setCarierTodo]\n    = useState(initialTodo);\n  const isOpenTodoModal = carierTodo.userId !== 0;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setSelected={setSelected}\n                setSearchHolder={setSearchHolder}\n              />\n            </div>\n\n            <div className=\"block\">\n              <TodoInfo\n                carierTodo={carierTodo}\n                setCarierTodo={setCarierTodo}\n                selected={selected}\n                searchHolder={searchHolder}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isOpenTodoModal && (\n        <TodoModal\n          initialTodo={initialTodo}\n          setCarierTodo={setCarierTodo}\n          carierTodo={carierTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}